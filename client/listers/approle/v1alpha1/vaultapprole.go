/*
Copyright The KubeVault Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubevault.dev/operator/apis/approle/v1alpha1"
)

// VaultAppRoleLister helps list VaultAppRoles.
type VaultAppRoleLister interface {
	// List lists all VaultAppRoles in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.VaultAppRole, err error)
	// VaultAppRoles returns an object that can list and get VaultAppRoles.
	VaultAppRoles(namespace string) VaultAppRoleNamespaceLister
	VaultAppRoleListerExpansion
}

// vaultAppRoleLister implements the VaultAppRoleLister interface.
type vaultAppRoleLister struct {
	indexer cache.Indexer
}

// NewVaultAppRoleLister returns a new VaultAppRoleLister.
func NewVaultAppRoleLister(indexer cache.Indexer) VaultAppRoleLister {
	return &vaultAppRoleLister{indexer: indexer}
}

// List lists all VaultAppRoles in the indexer.
func (s *vaultAppRoleLister) List(selector labels.Selector) (ret []*v1alpha1.VaultAppRole, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VaultAppRole))
	})
	return ret, err
}

// VaultAppRoles returns an object that can list and get VaultAppRoles.
func (s *vaultAppRoleLister) VaultAppRoles(namespace string) VaultAppRoleNamespaceLister {
	return vaultAppRoleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VaultAppRoleNamespaceLister helps list and get VaultAppRoles.
type VaultAppRoleNamespaceLister interface {
	// List lists all VaultAppRoles in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.VaultAppRole, err error)
	// Get retrieves the VaultAppRole from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.VaultAppRole, error)
	VaultAppRoleNamespaceListerExpansion
}

// vaultAppRoleNamespaceLister implements the VaultAppRoleNamespaceLister
// interface.
type vaultAppRoleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VaultAppRoles in the indexer for a given namespace.
func (s vaultAppRoleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VaultAppRole, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VaultAppRole))
	})
	return ret, err
}

// Get retrieves the VaultAppRole from the indexer for a given namespace and name.
func (s vaultAppRoleNamespaceLister) Get(name string) (*v1alpha1.VaultAppRole, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("vaultapprole"), name)
	}
	return obj.(*v1alpha1.VaultAppRole), nil
}
